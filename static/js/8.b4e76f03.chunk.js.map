{"version":3,"sources":["data/projects.js","pages/Projects.js","components/Projects/Cell.js"],"names":["data","title","subtitle","link","image","date","desc","Projects","Main","description","className","id","data-testid","to","map","project","Cell","href","src","process","alt"],"mappings":"sKAgDeA,EA/CF,CACX,CACEC,MAAO,kEACPC,SAAU,0EACVC,KAAM,kDACNC,MAAO,0CACPC,KAAM,4BACNC,KACE,0VAMJ,CACEL,MAAO,iCACPC,SAAU,+EACVC,KAAM,qFACNC,MAAO,qCACPC,KAAM,iBACNC,KACE,8OAKJ,CACEL,MAAO,iBACPC,SAAU,yDACVC,KAAM,2CACNC,MAAO,sCACPC,KAAM,iBACNC,KACE,uHAGJ,CACEL,MAAO,gBACPC,SAAU,0DACVC,KAAM,6CACNC,MAAO,qCACPC,KAAM,YACNC,KACE,gECdSC,UAtBE,kBACf,cAACC,EAAA,EAAD,CACEP,MAAM,WACNQ,YAAY,0CAFd,SAIE,0BAASC,UAAU,OAAOC,GAAG,WAA7B,UACE,iCACE,sBAAKD,UAAU,QAAf,UACE,oBAAIE,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMC,GAAG,YAAT,wBAC1B,uEAGHb,EAAKc,KAAI,SAACC,GAAD,OACR,cAACC,EAAA,EAAD,CACEhB,KAAMe,GACDA,EAAQd,iB,gDCORe,IA3BF,SAAC,GAAD,IAAGhB,EAAH,EAAGA,KAAH,OACX,qBAAKU,UAAU,iBAAf,SACE,0BAASA,UAAU,YAAnB,UACE,mCACE,6BAAI,mBAAGO,KAAMjB,EAAKG,KAAd,SAAqBH,EAAKC,UAC9B,sBAAMS,UAAU,YAAhB,SAA6BV,EAAKK,UAEpC,mBAAGY,KAAMjB,EAAKG,KAAMO,UAAU,QAA9B,SACE,qBAAKQ,IAAG,UAAKC,IAAL,OAA8BnB,EAAKI,OAASgB,IAAKpB,EAAKC,UAEhE,qBAAKS,UAAU,cAAf,SACE,4BAAIV,EAAKM","file":"static/js/8.b4e76f03.chunk.js","sourcesContent":["// TODO Add a couple lines about each project\nconst data = [\n  {\n    title: 'Representation Ensembling & Machine Artificial Grammar Learning',\n    subtitle: 'A Jupyter Notebook containing machine AGL and representation ensembling',\n    link: 'https://github.com/GabrielKP/continual-learning',\n    image: '/images/projects/agl_representation.jpg',\n    date: 'Spring & Summer 2021, JHU',\n    desc:\n      'With the premise that humans employ different \\'expert\\' networks based on '\n      + 'context, I was involved into sketching and implementing first drafts of'\n      + 'a novel algorithm enabling Transfer and Continual Learning. First, we '\n      + 'chose the Artificial Grammar Learning domain, but I moved on to implement '\n      + 'a test environment for CIFAR10x10 (based on CIFAR100).',\n  },\n  {\n    title: 'Thought Paper on Marr\\' levels.',\n    subtitle: 'A small essay on the inpedence between implementatinal and algorithmic layer',\n    link: 'https://drive.google.com/file/d/1A9IwyFUlSLC5mZMGz0dygJZ7lSDUOTAp/view?usp=sharing',\n    image: '/images/projects/thought_paper.jpg',\n    date: 'Fall 2020, JHU',\n    desc:\n      'In 1982 Marr proposed to look at processes on three levels: the computation'\n      + ' level, the algorithm and the implementation level. Marr sets forth that'\n      + ' those levels are only loosely dependent on each other, this essay questions'\n      + ' that idea.',\n  },\n  {\n    title: 'Local Learning',\n    subtitle: 'A Jupyter Notebook investigating local learning rules.',\n    link: 'https://github.com/GabrielKP/MMB-Project',\n    image: '/images/projects/local_learning.jpg',\n    date: 'Fall 2020, JHU',\n    desc:\n      'A Jupyter Notebook investigating local learning rules: Hebbs Rule, '\n      + 'Hebbs Rule with regularization and a Oja\\'s Rule.',\n  },\n  {\n    title: 'Elephant Fish',\n    subtitle: 'A Recurrent Neural Network to predict fish trajectories',\n    link: 'https://github.com/GabrielKP/Elephant-Fish',\n    image: '/images/projects/elephant_fish.jpg',\n    date: 'FU-Berlin',\n    desc:\n      'A simulation of elephant-nose fish trajectories with a RNN.',\n  },\n];\n\nexport default data;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Cell from '../components/Projects/Cell';\nimport data from '../data/projects';\n\nconst Projects = () => (\n  <Main\n    title=\"Projects\"\n    description=\"Learn about Gabriel Kressin's projects.\"\n  >\n    <article className=\"post\" id=\"projects\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"/projects\">Projects</Link></h2>\n          <p>Some projects I am or was part of</p>\n        </div>\n      </header>\n      {data.map((project) => (\n        <Cell\n          data={project}\n          key={project.title}\n        />\n      ))}\n    </article>\n  </Main>\n);\n\nexport default Projects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cell = ({ data }) => (\n  <div className=\"cell-container\">\n    <article className=\"mini-post\">\n      <header>\n        <h3><a href={data.link}>{data.title}</a></h3>\n        <time className=\"published\">{data.date}</time>\n      </header>\n      <a href={data.link} className=\"image\">\n        <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\n      </a>\n      <div className=\"description\">\n        <p>{data.desc}</p>\n      </div>\n    </article>\n  </div>\n);\n\nCell.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    image: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Cell;\n"],"sourceRoot":""}